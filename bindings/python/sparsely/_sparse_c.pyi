import numpy as np


class CSR:
    def __init__(
        self,
        nrows: int,
        ncols: int,
        rowptr: np.ndarray,
        colind: np.ndarray,
        values: np.ndarray,
    ): ...

    def __getitem__(self, key: tuple[int, int]) -> float: ...

    @property
    def shape(self) -> tuple[int, int]: ...

    @property
    def T(self) -> 'CSC': ...

    def todense(self) -> np.ndarray: ...


class CSC:
    def __getitem__(self, key: tuple[int, int]) -> float: ...

    @property
    def shape(self) -> tuple[int, int]: ...

    @property
    def T(self) -> 'CSC': ...

    def sort_indices(self): ...
    def todense(self) -> np.ndarray: ...



def csr_mul_dense(lhs: CSR, rhs: np.ndarray): ...
def csr_mul_csr(lhs: CSR, rhs: CSR) -> CSR: ...
def csr_add_csr(lhs: CSR, rhs: CSR) -> CSR: ...

def csc_mul_csr(lhs: CSC, rhs: CSR) -> CSR: ...
def csc_mul_dense(lhs: CSC, rhs: np.ndarray) -> np.ndarray: ...

def csc_to_csr(csc: CSC) -> CSR: ...
def csr_to_csc(csr: CSR) -> CSC: ...

# cholesky
def cholesky(csr: CSC) -> CSC: ...
def solve_cholesky(L: CSC, b: np.ndarray) -> np.ndarray: ...
